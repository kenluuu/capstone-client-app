webpackHotUpdate(0,{

/***/ 28:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(8)();\n// imports\n\n\n// module\nexports.push([module.i, \"\\n#chat-box {\\n  margin-top: 80px;\\n  width: 25%;\\n  height: 600px;\\n  float: right;\\n  background-color: #fff;\\n  border-style: solid;\\n  border-width: 2px;\\n  border-color: #e9ebee;\\n  display: block;\\n  margin-right: 20px;\\n  border-radius: 5px;\\n}\\n#chat-messages {\\n  margin-top: 100px;\\n  width: 100%; \\n  height: 430px;\\n  overflow-y: auto; \\n  word-wrap: break-word;\\n}\\n#chat-input-box { \\n  margin-top: 19px;\\n  width: 100%;\\n  height: 8%;\\n  background-color: #e9ebee;\\n}\\n#chat-input input {\\n  margin-top: 10px;\\n  width: 250px;\\n  border-radius: 3px;\\n}\\n#chat-box-top {\\n  width: 352px;\\n  border-radius: 1px;\\n  height: 100px;\\n  background-color: #e9ebee;\\n  border-bottom-style: solid;\\n  border-bottom-color: #e9ebee;\\n  border-bottom-width: 2px;\\n  position: absolute;\\n}\\n#video {\\n  margin-left: 30px;\\n  margin-top: 80px;\\n}\\n.stylish-input-group .input-group-addon{\\n  background: white !important;\\n}\\n.stylish-input-group .form-control{\\n  border-right:0; \\n  box-shadow:0 0 0; \\n  border-color:#ccc;\\n}\\n.stylish-input-group button{\\n    border:0;\\n    background:transparent;\\n}\\n#vid-grid {\\n  margin-top: 30px;\\n}\\n#users-box {\\n  width: 40px;\\n  height: 40px;\\n  background-color: white;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"/./src/components/Room.vue?13feb5bc\"],\"names\":[],\"mappings\":\";AAkPA;EACA,iBAAA;EACA,WAAA;EACA,cAAA;EACA,aAAA;EACA,uBAAA;EACA,oBAAA;EACA,kBAAA;EACA,sBAAA;EACA,eAAA;EACA,mBAAA;EACA,mBAAA;CACA;AACA;EACA,kBAAA;EACA,YAAA;EACA,cAAA;EACA,iBAAA;EACA,sBAAA;CAEA;AACA;EACA,iBAAA;EACA,YAAA;EACA,WAAA;EACA,0BAAA;CACA;AAEA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;CACA;AAEA;EACA,aAAA;EACA,mBAAA;EACA,cAAA;EACA,0BAAA;EACA,2BAAA;EACA,6BAAA;EACA,yBAAA;EACA,mBAAA;CACA;AAGA;EACA,kBAAA;EACA,iBAAA;CACA;AAIA;EACA,6BAAA;CAEA;AACA;EACA,eAAA;EACA,iBAAA;EACA,kBAAA;CACA;AACA;IACA,SAAA;IACA,uBAAA;CACA;AAEA;EACA,iBAAA;CACA;AAEA;EACA,YAAA;EACA,aAAA;EACA,wBAAA;CACA\",\"file\":\"Room.vue\",\"sourcesContent\":[\"<template>\\n  <div id=\\\"room-comp\\\">\\n\\t  <div id=\\\"navbar\\\">\\n      <app-navbar></app-navbar>\\n    </div>\\n    <div id=\\\"room\\\">\\n      <div id=\\\"chat-box\\\">\\n        <div id=\\\"chat-box-top\\\" v-for=\\\"users in usersArray\\\">\\n          <div id=\\\"user-box\\\">\\n            {{users}}\\n          </div>\\n        </div>\\n        <div id=\\\"chat-messages\\\">\\n          <app-chat :messages=\\\"messages\\\" ></app-chat>\\n        </div>\\n        <div id=\\\"chat-input-box\\\">\\n          <div id=\\\"chat-input\\\" class=\\\"text-center\\\">\\n            <input placeholder=\\\"Send a message\\\" v-model=\\\"inputMessage\\\" @keyup.enter.prevent=\\\"createMessage\\\">   \\n          </div>\\n        </div>\\n      </div> \\n    </div>\\n\\t<div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <div id=\\\"video\\\">\\n         <youtube :video-id=\\\"vidid\\\" @ready=\\\"ready\\\" @playing=\\\"playing\\\" @paused=\\\"paused\\\" player-width=\\\"1010\\\" player-height=\\\"600\\\"></youtube> \\n      </div>\\n    </div>  \\n  </div>\\n  \\n\\t\\t<hr>\\n\\t\\t  \\n\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                  <div id=\\\"imaginary_container\\\"> \\n                      <div class=\\\"input-group stylish-input-group\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\"  v-model=\\\"searchTerm\\\"  placeholder=\\\"Search\\\" @keyup.enter=\\\"getVideo\\\">\\n                          <span class=\\\"input-group-addon\\\" @click=\\\"getVideo\\\">\\n                              <button type=\\\"submit\\\" >\\n                                  <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                              </button>  \\n                          </span>\\n                      </div>\\n                  </div>\\n              </div>\\n        </div>\\n      </div>\\n     \\n      \\n    <div id=\\\"vid-grid\\\">\\n\\t\\t\\t<app-video-grid :results=\\\"results\\\" @selectedVideo=\\\"vidId = $event\\\"></app-video-grid>\\n\\t\\t</div>\\n   <br> <br> <br> <br> <br> <br> \\n  </div>\\n\\n</template>\\n\\n<script>\\n  var somePromise = new Promise((resolve,reject) => {\\n    resolve('it works!');\\n  });\\n\\n\\nimport Navbar from './Navbar.vue'\\nimport { serverBus} from '../main';\\nimport VideoGrid from './VideoGrid.vue';\\nimport Chat from './Chat.vue'\\nexport default {\\n  data() {\\n  \\treturn {\\n  \\t\\tsearchTerm: '',\\n  \\t\\tvideoId:[],\\n  \\t\\ttitle:[],\\n  \\t\\tthumbnails:[],\\n  \\t\\tresults: [],\\n  \\t\\tvidid: 'fzQ6gRAEoy0',\\n  \\t\\tchannelTitle: [],\\n      channelId:[],\\n      selectedChannel: '',\\n      user: undefined,\\n      inputMessage: '',\\n      messages: [],\\n      usersArray: [],\\n      currentTime: undefined\\n  \\t\\t\\n  \\t};\\n  \\n  },\\n  components: {\\n  \\tappVideoGrid: VideoGrid,\\n    appChat: Chat,\\n    appNavbar: Navbar\\n  \\n  },\\n  methods: {\\n  \\tgetVideo() {\\n  \\t\\tthis.reset();\\n  \\t\\tthis.$http.get('https://www.googleapis.com/youtube/v3/search?part=snippet&q='+this.searchTerm+'&type=video&maxResults=50&key=AIzaSyDta5IM-2Dm1BZwsRRIUbGvv20NcnovaKQ')\\n  \\t\\t\\t\\t.then(response => {\\n  \\t\\t\\t\\t\\treturn response.json();\\n  \\t\\t\\t\\t})\\n  \\t\\t\\t\\t.then(data => {\\n  \\t\\t\\t\\t\\tconsole.log(data.items);\\n  \\t\\t\\t\\t\\tthis.update(data.items)\\n  \\t\\t\\t\\t});\\n  \\t},\\n    getChannelVideos() {\\n      this.reset();\\n      this.$http.get('https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=' +this.selectedChannel+ '&type=video&maxResults=50&order=date&key=AIzaSyDta5IM-2Dm1BZwsRRIUbGvv20NcnovaKQ')\\n          .then(response => {\\n            return response.json();\\n          })\\n          .then(data => {\\n            console.log(data.items);\\n            this.update(data.items)\\n          });\\n    },\\n    reset() {\\n      this.videoId = [];\\n      this.title = [];\\n      this.thumbnails = [];\\n      this.results = [];\\n      this.channelTitle = [];\\n      this.channelId = [];\\n    },\\n    update(data) {\\n      for(var i = 0; i < data.length; i++) {\\n        this.videoId.push(data[i].id.videoId);\\n        this.channelTitle.push(data[i].snippet.channelTitle);\\n        this.channelId.push(data[i].snippet.channelId);\\n        this.title.push(data[i].snippet.title);\\n        this.thumbnails.push(data[i].snippet.thumbnails.medium.url);\\n        this.results.push({\\n          vidId: this.videoId[i],\\n          vidTitle: this.title[i],\\n          vidThumbnail: this.thumbnails[i],\\n          vidChannelTitle: this.channelTitle[i],\\n          vidChannelId: this.channelId[i]\\n        });\\n      } \\n    },\\n    createMessage() {\\n      this.$socket.emit('createMessage',this.inputMessage);\\n      \\n      this.inputMessage = '';\\n    },\\n    ready(player) {\\n      console.log('ready');\\n      this.player = player;\\n\\n    },\\n    playing(player) {\\n      this.player.playVideo();\\n      \\n      this.$socket.emit('play', this.vidid);\\n    },\\n    \\n    paused () {\\n      console.log('works');\\n      this.player.pauseVideo();\\n      this.$socket.emit('pause', 'pause');\\n    },\\n    changeVideo(vidid) {\\n      return new Promise((resolve,reject) => {\\n        this.vidid = vidid;\\n        resolve();\\n      });\\n    }\\n    \\n  },\\n  created() {\\n\\t\\tserverBus.$on('selectedVideo', (data)=> {\\n\\t\\t\\t\\t\\n      this.changeVideo(data).then(() => {\\n        this.player.playVideo();\\n        window.scrollTo(0, 0);\\n      });\\n\\n    });\\n    serverBus.$on('selectedChannelVideo', (data)=> {\\n        console.log(data);\\n        this.selectedChannel = data;\\n        console.log(this.selectedChannel);\\n        this.getChannelVideos();\\n    });\\n    \\n    if(this.$cookie.get('user')) {\\n      this.user = JSON.parse(this.$cookie.get('user'));\\n      this.loggedIn = false;\\n      this.$socket.emit('join', {user: this.user, room: this.$route.query.id}, (e) => {\\n      \\n      });\\n    } else {\\n      window.location.href = '/login';\\n      alert('must be logged in');\\n    }\\n\\n    \\n  },\\n  sockets: {\\n    connect: function(){\\n      console.log('socket connected')\\n    },\\n    newMessage: function(msg) {\\n      console.log(msg);\\n      this.messages.push(msg);\\n    },\\n    updateUsersArray: function (users) {\\n      this.usersArray = users;\\n    },\\n    playVideo: function(vidid) {\\n     \\n      \\n      // somePromise.then((message) => {\\n      //   this.vidid = vidid;\\n      // }).then(() => {\\n      //   this.player.playVideo();\\n      // });\\n      var vm = this;\\n      this.changeVideo(vidid).then(() => {\\n        vm.player.playVideo();\\n      });\\n      \\n    },\\n    pauseVideo: function(msg) {\\n      console.log(msg);\\n      this.player.pauseVideo();\\n    }\\n  },\\n  destroyed() {\\n    this.$socket.emit('disconnect');\\n  }\\n   \\n}\\n</script>\\n\\n<style >\\n  \\n\\n\\n  #chat-box {\\n    margin-top: 80px;\\n    width: 25%;\\n    height: 600px;\\n    float: right;\\n    background-color: #fff;\\n    border-style: solid;\\n    border-width: 2px;\\n    border-color: #e9ebee;\\n    display: block;\\n    margin-right: 20px;\\n    border-radius: 5px;\\n  }\\n  #chat-messages {\\n    margin-top: 100px;\\n    width: 100%; \\n    height: 430px;\\n    overflow-y: auto; \\n    word-wrap: break-word;\\n  \\n  }\\n  #chat-input-box { \\n    margin-top: 19px;\\n    width: 100%;\\n    height: 8%;\\n    background-color: #e9ebee;\\n  }\\n\\n  #chat-input input {\\n    margin-top: 10px;\\n    width: 250px;\\n    border-radius: 3px;\\n  }\\n\\n  #chat-box-top {\\n    width: 352px;\\n    border-radius: 1px;\\n    height: 100px;\\n    background-color: #e9ebee;\\n    border-bottom-style: solid;\\n    border-bottom-color: #e9ebee;\\n    border-bottom-width: 2px;\\n    position: absolute;\\n  }\\n\\n\\n  #video {\\n    margin-left: 30px;\\n    margin-top: 80px;\\n  }\\n\\n  \\n\\n  .stylish-input-group .input-group-addon{\\n    background: white !important; \\n    \\n  }\\n  .stylish-input-group .form-control{\\n    border-right:0; \\n    box-shadow:0 0 0; \\n    border-color:#ccc;\\n  }\\n  .stylish-input-group button{\\n      border:0;\\n      background:transparent;\\n  }\\n\\n  #vid-grid {\\n    margin-top: 30px;\\n  }\\n\\n  #users-box {\\n    width: 40px;\\n    height: 40px;\\n    background-color: white;\\n  }\\n</style>\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Sb29tLnZ1ZT82MTE3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUdBO0FBQ0Esc0NBQXVDLHFCQUFxQixlQUFlLGtCQUFrQixpQkFBaUIsMkJBQTJCLHdCQUF3QixzQkFBc0IsMEJBQTBCLG1CQUFtQix1QkFBdUIsdUJBQXVCLEdBQUcsa0JBQWtCLHNCQUFzQixnQkFBZ0IsbUJBQW1CLHFCQUFxQiwyQkFBMkIsR0FBRyxtQkFBbUIsc0JBQXNCLGdCQUFnQixlQUFlLDhCQUE4QixHQUFHLHFCQUFxQixxQkFBcUIsaUJBQWlCLHVCQUF1QixHQUFHLGlCQUFpQixpQkFBaUIsdUJBQXVCLGtCQUFrQiw4QkFBOEIsK0JBQStCLGlDQUFpQyw2QkFBNkIsdUJBQXVCLEdBQUcsVUFBVSxzQkFBc0IscUJBQXFCLEdBQUcsMENBQTBDLGlDQUFpQyxHQUFHLHFDQUFxQyxtQkFBbUIsc0JBQXNCLHVCQUF1QixHQUFHLDhCQUE4QixlQUFlLDZCQUE2QixHQUFHLGFBQWEscUJBQXFCLEdBQUcsY0FBYyxnQkFBZ0IsaUJBQWlCLDRCQUE0QixHQUFHLFVBQVUsc0ZBQXNGLE1BQU0sV0FBVyxVQUFVLFVBQVUsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLEtBQUssS0FBSyxXQUFXLFVBQVUsVUFBVSxXQUFXLFdBQVcsS0FBSyxLQUFLLFdBQVcsVUFBVSxVQUFVLFdBQVcsS0FBSyxLQUFLLFdBQVcsVUFBVSxXQUFXLEtBQUssS0FBSyxVQUFVLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsS0FBSyxLQUFLLFdBQVcsV0FBVyxLQUFLLEtBQUssV0FBVyxLQUFLLEtBQUssVUFBVSxXQUFXLFdBQVcsS0FBSyxLQUFLLFVBQVUsV0FBVyxLQUFLLEtBQUssV0FBVyxLQUFLLEtBQUssVUFBVSxVQUFVLFdBQVcsMlRBQTJULE9BQU8sMHZEQUEwdkQsMkJBQTJCLEtBQUssRUFBRSxpREFBaUQsV0FBVyxnQkFBZ0IsMENBQTBDLGlEQUFpRCxZQUFZLGNBQWMsdVZBQXVWLFNBQVMsa0JBQWtCLGtGQUFrRixlQUFlLGtCQUFrQixxQkFBcUIsNk1BQTZNLHFDQUFxQyxhQUFhLDRCQUE0QixzQ0FBc0Msa0RBQWtELEVBQUUsT0FBTywyQkFBMkIscUJBQXFCLHVPQUF1TyxxQ0FBcUMsYUFBYSw0QkFBNEIsc0NBQXNDLGtEQUFrRCxFQUFFLE9BQU8sZ0JBQWdCLDBCQUEwQix3QkFBd0IsNkJBQTZCLDBCQUEwQiwrQkFBK0IsNEJBQTRCLE9BQU8scUJBQXFCLHNCQUFzQixpQkFBaUIsT0FBTyxnREFBZ0QsK0RBQStELHlEQUF5RCxpREFBaUQsc0VBQXNFLDZCQUE2Qiw0TkFBNE4sRUFBRSxTQUFTLFFBQVEsd0JBQXdCLDZEQUE2RCx1Q0FBdUMsT0FBTyxzQkFBc0IsNkJBQTZCLDZCQUE2QixTQUFTLHdCQUF3QixnQ0FBZ0Msc0RBQXNELE9BQU8sd0JBQXdCLDZCQUE2QixpQ0FBaUMsNENBQTRDLE9BQU8sMkJBQTJCLGdEQUFnRCw2QkFBNkIsb0JBQW9CLFNBQVMsRUFBRSxPQUFPLFdBQVcsZ0JBQWdCLCtDQUErQyxxREFBcUQsa0NBQWtDLGdDQUFnQyxTQUFTLEVBQUUsU0FBUyxFQUFFLHNEQUFzRCw0QkFBNEIsc0NBQXNDLDRDQUE0QyxrQ0FBa0MsT0FBTyxFQUFFLDBDQUEwQyx5REFBeUQsOEJBQThCLG1DQUFtQyw0Q0FBNEMsVUFBVSxpQkFBaUIsRUFBRSxPQUFPLE9BQU8sd0NBQXdDLG1DQUFtQyxPQUFPLGFBQWEsZUFBZSwwQkFBMEIsOENBQThDLGtDQUFrQyx5QkFBeUIsZ0NBQWdDLE9BQU8sMkNBQTJDLGdDQUFnQyxPQUFPLG1DQUFtQyx5REFBeUQsZ0NBQWdDLFlBQVksY0FBYyxxQ0FBcUMsWUFBWSxFQUFFLHNCQUFzQiw0Q0FBNEMsZ0NBQWdDLFNBQVMsRUFBRSxlQUFlLGtDQUFrQyx5QkFBeUIsaUNBQWlDLE9BQU8sS0FBSyxrQkFBa0Isc0NBQXNDLEtBQUssUUFBUSw4Q0FBOEMsdUJBQXVCLGlCQUFpQixvQkFBb0IsbUJBQW1CLDZCQUE2QiwwQkFBMEIsd0JBQXdCLDRCQUE0QixxQkFBcUIseUJBQXlCLHlCQUF5QixLQUFLLG9CQUFvQix3QkFBd0Isa0JBQWtCLHFCQUFxQix1QkFBdUIsNkJBQTZCLFNBQVMscUJBQXFCLHdCQUF3QixrQkFBa0IsaUJBQWlCLGdDQUFnQyxLQUFLLHlCQUF5Qix1QkFBdUIsbUJBQW1CLHlCQUF5QixLQUFLLHFCQUFxQixtQkFBbUIseUJBQXlCLG9CQUFvQixnQ0FBZ0MsaUNBQWlDLG1DQUFtQywrQkFBK0IseUJBQXlCLEtBQUssZ0JBQWdCLHdCQUF3Qix1QkFBdUIsS0FBSyxvREFBb0QsbUNBQW1DLFlBQVksdUNBQXVDLHFCQUFxQix3QkFBd0IseUJBQXlCLEtBQUssZ0NBQWdDLGlCQUFpQiwrQkFBK0IsS0FBSyxpQkFBaUIsdUJBQXVCLEtBQUssa0JBQWtCLGtCQUFrQixtQkFBbUIsOEJBQThCLEtBQUssdUNBQXVDOztBQUV4d1QiLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcXG4jY2hhdC1ib3gge1xcbiAgbWFyZ2luLXRvcDogODBweDtcXG4gIHdpZHRoOiAyNSU7XFxuICBoZWlnaHQ6IDYwMHB4O1xcbiAgZmxvYXQ6IHJpZ2h0O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XFxuICBib3JkZXItd2lkdGg6IDJweDtcXG4gIGJvcmRlci1jb2xvcjogI2U5ZWJlZTtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG4jY2hhdC1tZXNzYWdlcyB7XFxuICBtYXJnaW4tdG9wOiAxMDBweDtcXG4gIHdpZHRoOiAxMDAlOyBcXG4gIGhlaWdodDogNDMwcHg7XFxuICBvdmVyZmxvdy15OiBhdXRvOyBcXG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcXG59XFxuI2NoYXQtaW5wdXQtYm94IHsgXFxuICBtYXJnaW4tdG9wOiAxOXB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDglO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWJlZTtcXG59XFxuI2NoYXQtaW5wdXQgaW5wdXQge1xcbiAgbWFyZ2luLXRvcDogMTBweDtcXG4gIHdpZHRoOiAyNTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG59XFxuI2NoYXQtYm94LXRvcCB7XFxuICB3aWR0aDogMzUycHg7XFxuICBib3JkZXItcmFkaXVzOiAxcHg7XFxuICBoZWlnaHQ6IDEwMHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWJlZTtcXG4gIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2U5ZWJlZTtcXG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDJweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG59XFxuI3ZpZGVvIHtcXG4gIG1hcmdpbi1sZWZ0OiAzMHB4O1xcbiAgbWFyZ2luLXRvcDogODBweDtcXG59XFxuLnN0eWxpc2gtaW5wdXQtZ3JvdXAgLmlucHV0LWdyb3VwLWFkZG9ue1xcbiAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcXG59XFxuLnN0eWxpc2gtaW5wdXQtZ3JvdXAgLmZvcm0tY29udHJvbHtcXG4gIGJvcmRlci1yaWdodDowOyBcXG4gIGJveC1zaGFkb3c6MCAwIDA7IFxcbiAgYm9yZGVyLWNvbG9yOiNjY2M7XFxufVxcbi5zdHlsaXNoLWlucHV0LWdyb3VwIGJ1dHRvbntcXG4gICAgYm9yZGVyOjA7XFxuICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQ7XFxufVxcbiN2aWQtZ3JpZCB7XFxuICBtYXJnaW4tdG9wOiAzMHB4O1xcbn1cXG4jdXNlcnMtYm94IHtcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxufVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvLi9zcmMvY29tcG9uZW50cy9Sb29tLnZ1ZT8xM2ZlYjViY1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiO0FBa1BBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG9CQUFBO0VBQ0Esa0JBQUE7RUFDQSxzQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0NBQ0E7QUFDQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtFQUNBLHNCQUFBO0NBRUE7QUFDQTtFQUNBLGlCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSwwQkFBQTtDQUNBO0FBRUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtDQUNBO0FBRUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0VBQ0EsMEJBQUE7RUFDQSwyQkFBQTtFQUNBLDZCQUFBO0VBQ0EseUJBQUE7RUFDQSxtQkFBQTtDQUNBO0FBR0E7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0NBQ0E7QUFJQTtFQUNBLDZCQUFBO0NBRUE7QUFDQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0NBQ0E7QUFDQTtJQUNBLFNBQUE7SUFDQSx1QkFBQTtDQUNBO0FBRUE7RUFDQSxpQkFBQTtDQUNBO0FBRUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHdCQUFBO0NBQ0FcIixcImZpbGVcIjpcIlJvb20udnVlXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjx0ZW1wbGF0ZT5cXG4gIDxkaXYgaWQ9XFxcInJvb20tY29tcFxcXCI+XFxuXFx0ICA8ZGl2IGlkPVxcXCJuYXZiYXJcXFwiPlxcbiAgICAgIDxhcHAtbmF2YmFyPjwvYXBwLW5hdmJhcj5cXG4gICAgPC9kaXY+XFxuICAgIDxkaXYgaWQ9XFxcInJvb21cXFwiPlxcbiAgICAgIDxkaXYgaWQ9XFxcImNoYXQtYm94XFxcIj5cXG4gICAgICAgIDxkaXYgaWQ9XFxcImNoYXQtYm94LXRvcFxcXCIgdi1mb3I9XFxcInVzZXJzIGluIHVzZXJzQXJyYXlcXFwiPlxcbiAgICAgICAgICA8ZGl2IGlkPVxcXCJ1c2VyLWJveFxcXCI+XFxuICAgICAgICAgICAge3t1c2Vyc319XFxuICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgICA8ZGl2IGlkPVxcXCJjaGF0LW1lc3NhZ2VzXFxcIj5cXG4gICAgICAgICAgPGFwcC1jaGF0IDptZXNzYWdlcz1cXFwibWVzc2FnZXNcXFwiID48L2FwcC1jaGF0PlxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgICA8ZGl2IGlkPVxcXCJjaGF0LWlucHV0LWJveFxcXCI+XFxuICAgICAgICAgIDxkaXYgaWQ9XFxcImNoYXQtaW5wdXRcXFwiIGNsYXNzPVxcXCJ0ZXh0LWNlbnRlclxcXCI+XFxuICAgICAgICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPVxcXCJTZW5kIGEgbWVzc2FnZVxcXCIgdi1tb2RlbD1cXFwiaW5wdXRNZXNzYWdlXFxcIiBAa2V5dXAuZW50ZXIucHJldmVudD1cXFwiY3JlYXRlTWVzc2FnZVxcXCI+ICAgXFxuICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgPC9kaXY+IFxcbiAgICA8L2Rpdj5cXG5cXHQ8ZGl2IGNsYXNzPVxcXCJyb3dcXFwiPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJjb2wtbWQtOFxcXCI+XFxuICAgICAgPGRpdiBpZD1cXFwidmlkZW9cXFwiPlxcbiAgICAgICAgIDx5b3V0dWJlIDp2aWRlby1pZD1cXFwidmlkaWRcXFwiIEByZWFkeT1cXFwicmVhZHlcXFwiIEBwbGF5aW5nPVxcXCJwbGF5aW5nXFxcIiBAcGF1c2VkPVxcXCJwYXVzZWRcXFwiIHBsYXllci13aWR0aD1cXFwiMTAxMFxcXCIgcGxheWVyLWhlaWdodD1cXFwiNjAwXFxcIj48L3lvdXR1YmU+IFxcbiAgICAgIDwvZGl2PlxcbiAgICA8L2Rpdj4gIFxcbiAgPC9kaXY+XFxuICBcXG5cXHRcXHQ8aHI+XFxuXFx0XFx0ICBcXG5cXG4gICAgICA8ZGl2IGNsYXNzPVxcXCJjb250YWluZXJcXFwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwicm93XFxcIj5cXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImNvbC1zbS02IGNvbC1zbS1vZmZzZXQtM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cXFwiaW1hZ2luYXJ5X2NvbnRhaW5lclxcXCI+IFxcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJpbnB1dC1ncm91cCBzdHlsaXNoLWlucHV0LWdyb3VwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIiAgdi1tb2RlbD1cXFwic2VhcmNoVGVybVxcXCIgIHBsYWNlaG9sZGVyPVxcXCJTZWFyY2hcXFwiIEBrZXl1cC5lbnRlcj1cXFwiZ2V0VmlkZW9cXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImlucHV0LWdyb3VwLWFkZG9uXFxcIiBAY2xpY2s9XFxcImdldFZpZGVvXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XFxcInN1Ym1pdFxcXCIgPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiZ2x5cGhpY29uIGdseXBoaWNvbi1zZWFyY2hcXFwiPjwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4gIFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgPC9kaXY+XFxuICAgICBcXG4gICAgICBcXG4gICAgPGRpdiBpZD1cXFwidmlkLWdyaWRcXFwiPlxcblxcdFxcdFxcdDxhcHAtdmlkZW8tZ3JpZCA6cmVzdWx0cz1cXFwicmVzdWx0c1xcXCIgQHNlbGVjdGVkVmlkZW89XFxcInZpZElkID0gJGV2ZW50XFxcIj48L2FwcC12aWRlby1ncmlkPlxcblxcdFxcdDwvZGl2PlxcbiAgIDxicj4gPGJyPiA8YnI+IDxicj4gPGJyPiA8YnI+IFxcbiAgPC9kaXY+XFxuXFxuPC90ZW1wbGF0ZT5cXG5cXG48c2NyaXB0PlxcbiAgdmFyIHNvbWVQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KSA9PiB7XFxuICAgIHJlc29sdmUoJ2l0IHdvcmtzIScpO1xcbiAgfSk7XFxuXFxuXFxuaW1wb3J0IE5hdmJhciBmcm9tICcuL05hdmJhci52dWUnXFxuaW1wb3J0IHsgc2VydmVyQnVzfSBmcm9tICcuLi9tYWluJztcXG5pbXBvcnQgVmlkZW9HcmlkIGZyb20gJy4vVmlkZW9HcmlkLnZ1ZSc7XFxuaW1wb3J0IENoYXQgZnJvbSAnLi9DaGF0LnZ1ZSdcXG5leHBvcnQgZGVmYXVsdCB7XFxuICBkYXRhKCkge1xcbiAgXFx0cmV0dXJuIHtcXG4gIFxcdFxcdHNlYXJjaFRlcm06ICcnLFxcbiAgXFx0XFx0dmlkZW9JZDpbXSxcXG4gIFxcdFxcdHRpdGxlOltdLFxcbiAgXFx0XFx0dGh1bWJuYWlsczpbXSxcXG4gIFxcdFxcdHJlc3VsdHM6IFtdLFxcbiAgXFx0XFx0dmlkaWQ6ICdmelE2Z1JBRW95MCcsXFxuICBcXHRcXHRjaGFubmVsVGl0bGU6IFtdLFxcbiAgICAgIGNoYW5uZWxJZDpbXSxcXG4gICAgICBzZWxlY3RlZENoYW5uZWw6ICcnLFxcbiAgICAgIHVzZXI6IHVuZGVmaW5lZCxcXG4gICAgICBpbnB1dE1lc3NhZ2U6ICcnLFxcbiAgICAgIG1lc3NhZ2VzOiBbXSxcXG4gICAgICB1c2Vyc0FycmF5OiBbXSxcXG4gICAgICBjdXJyZW50VGltZTogdW5kZWZpbmVkXFxuICBcXHRcXHRcXG4gIFxcdH07XFxuICBcXG4gIH0sXFxuICBjb21wb25lbnRzOiB7XFxuICBcXHRhcHBWaWRlb0dyaWQ6IFZpZGVvR3JpZCxcXG4gICAgYXBwQ2hhdDogQ2hhdCxcXG4gICAgYXBwTmF2YmFyOiBOYXZiYXJcXG4gIFxcbiAgfSxcXG4gIG1ldGhvZHM6IHtcXG4gIFxcdGdldFZpZGVvKCkge1xcbiAgXFx0XFx0dGhpcy5yZXNldCgpO1xcbiAgXFx0XFx0dGhpcy4kaHR0cC5nZXQoJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3lvdXR1YmUvdjMvc2VhcmNoP3BhcnQ9c25pcHBldCZxPScrdGhpcy5zZWFyY2hUZXJtKycmdHlwZT12aWRlbyZtYXhSZXN1bHRzPTUwJmtleT1BSXphU3lEdGE1SU0tMkRtMUJad3NSUklVYkd2djIwTmNub3ZhS1EnKVxcbiAgXFx0XFx0XFx0XFx0LnRoZW4ocmVzcG9uc2UgPT4ge1xcbiAgXFx0XFx0XFx0XFx0XFx0cmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcXG4gIFxcdFxcdFxcdFxcdH0pXFxuICBcXHRcXHRcXHRcXHQudGhlbihkYXRhID0+IHtcXG4gIFxcdFxcdFxcdFxcdFxcdGNvbnNvbGUubG9nKGRhdGEuaXRlbXMpO1xcbiAgXFx0XFx0XFx0XFx0XFx0dGhpcy51cGRhdGUoZGF0YS5pdGVtcylcXG4gIFxcdFxcdFxcdFxcdH0pO1xcbiAgXFx0fSxcXG4gICAgZ2V0Q2hhbm5lbFZpZGVvcygpIHtcXG4gICAgICB0aGlzLnJlc2V0KCk7XFxuICAgICAgdGhpcy4kaHR0cC5nZXQoJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3lvdXR1YmUvdjMvc2VhcmNoP3BhcnQ9c25pcHBldCZjaGFubmVsSWQ9JyArdGhpcy5zZWxlY3RlZENoYW5uZWwrICcmdHlwZT12aWRlbyZtYXhSZXN1bHRzPTUwJm9yZGVyPWRhdGUma2V5PUFJemFTeUR0YTVJTS0yRG0xQlp3c1JSSVViR3Z2MjBOY25vdmFLUScpXFxuICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcXG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xcbiAgICAgICAgICB9KVxcbiAgICAgICAgICAudGhlbihkYXRhID0+IHtcXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLml0ZW1zKTtcXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZShkYXRhLml0ZW1zKVxcbiAgICAgICAgICB9KTtcXG4gICAgfSxcXG4gICAgcmVzZXQoKSB7XFxuICAgICAgdGhpcy52aWRlb0lkID0gW107XFxuICAgICAgdGhpcy50aXRsZSA9IFtdO1xcbiAgICAgIHRoaXMudGh1bWJuYWlscyA9IFtdO1xcbiAgICAgIHRoaXMucmVzdWx0cyA9IFtdO1xcbiAgICAgIHRoaXMuY2hhbm5lbFRpdGxlID0gW107XFxuICAgICAgdGhpcy5jaGFubmVsSWQgPSBbXTtcXG4gICAgfSxcXG4gICAgdXBkYXRlKGRhdGEpIHtcXG4gICAgICBmb3IodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xcbiAgICAgICAgdGhpcy52aWRlb0lkLnB1c2goZGF0YVtpXS5pZC52aWRlb0lkKTtcXG4gICAgICAgIHRoaXMuY2hhbm5lbFRpdGxlLnB1c2goZGF0YVtpXS5zbmlwcGV0LmNoYW5uZWxUaXRsZSk7XFxuICAgICAgICB0aGlzLmNoYW5uZWxJZC5wdXNoKGRhdGFbaV0uc25pcHBldC5jaGFubmVsSWQpO1xcbiAgICAgICAgdGhpcy50aXRsZS5wdXNoKGRhdGFbaV0uc25pcHBldC50aXRsZSk7XFxuICAgICAgICB0aGlzLnRodW1ibmFpbHMucHVzaChkYXRhW2ldLnNuaXBwZXQudGh1bWJuYWlscy5tZWRpdW0udXJsKTtcXG4gICAgICAgIHRoaXMucmVzdWx0cy5wdXNoKHtcXG4gICAgICAgICAgdmlkSWQ6IHRoaXMudmlkZW9JZFtpXSxcXG4gICAgICAgICAgdmlkVGl0bGU6IHRoaXMudGl0bGVbaV0sXFxuICAgICAgICAgIHZpZFRodW1ibmFpbDogdGhpcy50aHVtYm5haWxzW2ldLFxcbiAgICAgICAgICB2aWRDaGFubmVsVGl0bGU6IHRoaXMuY2hhbm5lbFRpdGxlW2ldLFxcbiAgICAgICAgICB2aWRDaGFubmVsSWQ6IHRoaXMuY2hhbm5lbElkW2ldXFxuICAgICAgICB9KTtcXG4gICAgICB9IFxcbiAgICB9LFxcbiAgICBjcmVhdGVNZXNzYWdlKCkge1xcbiAgICAgIHRoaXMuJHNvY2tldC5lbWl0KCdjcmVhdGVNZXNzYWdlJyx0aGlzLmlucHV0TWVzc2FnZSk7XFxuICAgICAgXFxuICAgICAgdGhpcy5pbnB1dE1lc3NhZ2UgPSAnJztcXG4gICAgfSxcXG4gICAgcmVhZHkocGxheWVyKSB7XFxuICAgICAgY29uc29sZS5sb2coJ3JlYWR5Jyk7XFxuICAgICAgdGhpcy5wbGF5ZXIgPSBwbGF5ZXI7XFxuXFxuICAgIH0sXFxuICAgIHBsYXlpbmcocGxheWVyKSB7XFxuICAgICAgdGhpcy5wbGF5ZXIucGxheVZpZGVvKCk7XFxuICAgICAgXFxuICAgICAgdGhpcy4kc29ja2V0LmVtaXQoJ3BsYXknLCB0aGlzLnZpZGlkKTtcXG4gICAgfSxcXG4gICAgXFxuICAgIHBhdXNlZCAoKSB7XFxuICAgICAgY29uc29sZS5sb2coJ3dvcmtzJyk7XFxuICAgICAgdGhpcy5wbGF5ZXIucGF1c2VWaWRlbygpO1xcbiAgICAgIHRoaXMuJHNvY2tldC5lbWl0KCdwYXVzZScsICdwYXVzZScpO1xcbiAgICB9LFxcbiAgICBjaGFuZ2VWaWRlbyh2aWRpZCkge1xcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpID0+IHtcXG4gICAgICAgIHRoaXMudmlkaWQgPSB2aWRpZDtcXG4gICAgICAgIHJlc29sdmUoKTtcXG4gICAgICB9KTtcXG4gICAgfVxcbiAgICBcXG4gIH0sXFxuICBjcmVhdGVkKCkge1xcblxcdFxcdHNlcnZlckJ1cy4kb24oJ3NlbGVjdGVkVmlkZW8nLCAoZGF0YSk9PiB7XFxuXFx0XFx0XFx0XFx0XFxuICAgICAgdGhpcy5jaGFuZ2VWaWRlbyhkYXRhKS50aGVuKCgpID0+IHtcXG4gICAgICAgIHRoaXMucGxheWVyLnBsYXlWaWRlbygpO1xcbiAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIDApO1xcbiAgICAgIH0pO1xcblxcbiAgICB9KTtcXG4gICAgc2VydmVyQnVzLiRvbignc2VsZWN0ZWRDaGFubmVsVmlkZW8nLCAoZGF0YSk9PiB7XFxuICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRDaGFubmVsID0gZGF0YTtcXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VsZWN0ZWRDaGFubmVsKTtcXG4gICAgICAgIHRoaXMuZ2V0Q2hhbm5lbFZpZGVvcygpO1xcbiAgICB9KTtcXG4gICAgXFxuICAgIGlmKHRoaXMuJGNvb2tpZS5nZXQoJ3VzZXInKSkge1xcbiAgICAgIHRoaXMudXNlciA9IEpTT04ucGFyc2UodGhpcy4kY29va2llLmdldCgndXNlcicpKTtcXG4gICAgICB0aGlzLmxvZ2dlZEluID0gZmFsc2U7XFxuICAgICAgdGhpcy4kc29ja2V0LmVtaXQoJ2pvaW4nLCB7dXNlcjogdGhpcy51c2VyLCByb29tOiB0aGlzLiRyb3V0ZS5xdWVyeS5pZH0sIChlKSA9PiB7XFxuICAgICAgXFxuICAgICAgfSk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL2xvZ2luJztcXG4gICAgICBhbGVydCgnbXVzdCBiZSBsb2dnZWQgaW4nKTtcXG4gICAgfVxcblxcbiAgICBcXG4gIH0sXFxuICBzb2NrZXRzOiB7XFxuICAgIGNvbm5lY3Q6IGZ1bmN0aW9uKCl7XFxuICAgICAgY29uc29sZS5sb2coJ3NvY2tldCBjb25uZWN0ZWQnKVxcbiAgICB9LFxcbiAgICBuZXdNZXNzYWdlOiBmdW5jdGlvbihtc2cpIHtcXG4gICAgICBjb25zb2xlLmxvZyhtc2cpO1xcbiAgICAgIHRoaXMubWVzc2FnZXMucHVzaChtc2cpO1xcbiAgICB9LFxcbiAgICB1cGRhdGVVc2Vyc0FycmF5OiBmdW5jdGlvbiAodXNlcnMpIHtcXG4gICAgICB0aGlzLnVzZXJzQXJyYXkgPSB1c2VycztcXG4gICAgfSxcXG4gICAgcGxheVZpZGVvOiBmdW5jdGlvbih2aWRpZCkge1xcbiAgICAgXFxuICAgICAgXFxuICAgICAgLy8gc29tZVByb21pc2UudGhlbigobWVzc2FnZSkgPT4ge1xcbiAgICAgIC8vICAgdGhpcy52aWRpZCA9IHZpZGlkO1xcbiAgICAgIC8vIH0pLnRoZW4oKCkgPT4ge1xcbiAgICAgIC8vICAgdGhpcy5wbGF5ZXIucGxheVZpZGVvKCk7XFxuICAgICAgLy8gfSk7XFxuICAgICAgdmFyIHZtID0gdGhpcztcXG4gICAgICB0aGlzLmNoYW5nZVZpZGVvKHZpZGlkKS50aGVuKCgpID0+IHtcXG4gICAgICAgIHZtLnBsYXllci5wbGF5VmlkZW8oKTtcXG4gICAgICB9KTtcXG4gICAgICBcXG4gICAgfSxcXG4gICAgcGF1c2VWaWRlbzogZnVuY3Rpb24obXNnKSB7XFxuICAgICAgY29uc29sZS5sb2cobXNnKTtcXG4gICAgICB0aGlzLnBsYXllci5wYXVzZVZpZGVvKCk7XFxuICAgIH1cXG4gIH0sXFxuICBkZXN0cm95ZWQoKSB7XFxuICAgIHRoaXMuJHNvY2tldC5lbWl0KCdkaXNjb25uZWN0Jyk7XFxuICB9XFxuICAgXFxufVxcbjwvc2NyaXB0PlxcblxcbjxzdHlsZSA+XFxuICBcXG5cXG5cXG4gICNjaGF0LWJveCB7XFxuICAgIG1hcmdpbi10b3A6IDgwcHg7XFxuICAgIHdpZHRoOiAyNSU7XFxuICAgIGhlaWdodDogNjAwcHg7XFxuICAgIGZsb2F0OiByaWdodDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG4gICAgYm9yZGVyLXdpZHRoOiAycHg7XFxuICAgIGJvcmRlci1jb2xvcjogI2U5ZWJlZTtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgfVxcbiAgI2NoYXQtbWVzc2FnZXMge1xcbiAgICBtYXJnaW4tdG9wOiAxMDBweDtcXG4gICAgd2lkdGg6IDEwMCU7IFxcbiAgICBoZWlnaHQ6IDQzMHB4O1xcbiAgICBvdmVyZmxvdy15OiBhdXRvOyBcXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xcbiAgXFxuICB9XFxuICAjY2hhdC1pbnB1dC1ib3ggeyBcXG4gICAgbWFyZ2luLXRvcDogMTlweDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogOCU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOWViZWU7XFxuICB9XFxuXFxuICAjY2hhdC1pbnB1dCBpbnB1dCB7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIHdpZHRoOiAyNTBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xcbiAgfVxcblxcbiAgI2NoYXQtYm94LXRvcCB7XFxuICAgIHdpZHRoOiAzNTJweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMXB4O1xcbiAgICBoZWlnaHQ6IDEwMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTllYmVlO1xcbiAgICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2U5ZWJlZTtcXG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMnB4O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB9XFxuXFxuXFxuICAjdmlkZW8ge1xcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcXG4gICAgbWFyZ2luLXRvcDogODBweDtcXG4gIH1cXG5cXG4gIFxcblxcbiAgLnN0eWxpc2gtaW5wdXQtZ3JvdXAgLmlucHV0LWdyb3VwLWFkZG9ue1xcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50OyBcXG4gICAgXFxuICB9XFxuICAuc3R5bGlzaC1pbnB1dC1ncm91cCAuZm9ybS1jb250cm9se1xcbiAgICBib3JkZXItcmlnaHQ6MDsgXFxuICAgIGJveC1zaGFkb3c6MCAwIDA7IFxcbiAgICBib3JkZXItY29sb3I6I2NjYztcXG4gIH1cXG4gIC5zdHlsaXNoLWlucHV0LWdyb3VwIGJ1dHRvbntcXG4gICAgICBib3JkZXI6MDtcXG4gICAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O1xcbiAgfVxcblxcbiAgI3ZpZC1ncmlkIHtcXG4gICAgbWFyZ2luLXRvcDogMzBweDtcXG4gIH1cXG5cXG4gICN1c2Vycy1ib3gge1xcbiAgICB3aWR0aDogNDBweDtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIH1cXG48L3N0eWxlPlwiXSxcInNvdXJjZVJvb3RcIjpcIndlYnBhY2s6Ly9cIn1dKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwIS4vfi92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlcj97XCJpZFwiOlwiZGF0YS12LTlhZjlhMTUwXCIsXCJzY29wZWRcIjpmYWxzZSxcImhhc0lubGluZUNvbmZpZ1wiOmZhbHNlfSEuL34vdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3NyYy9jb21wb25lbnRzL1Jvb20udnVlXG4vLyBtb2R1bGUgaWQgPSAyOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9");

/***/ })

})